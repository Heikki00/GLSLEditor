layout (location = 0) in vec3 position;
layout (location = 1) in vec2 texCoord;
layout (location = 2) in vec3 normal;
layout (location = 3) in vec3 tanget;
jgit
out vec2 texCoord0;
out mat3 tbnMatrix;
out vec3 worldPos0;
out vec3 normal0;
out vec4 shandowMapCoords0;

uniform mat4 T_model;
uniform mat4 T_MVP;
uniform mat4 R_lightMatrix;

void main(){
	
	texCoord0 = texCoord;
	
	worldPos0 = (T_model * vec4(position, 1.0)).xyz;
	
	gl_Position = T_MVP * vec4(position, 1);
	
	normal0 = normal;
	
	shandowMapCoords0 = R_lightMatrix * vec4(position, 1);
	
	
	
	vec3 n = normalize((T_model * vec4(normal, 0.0)).xyz);
	vec3 t = normalize((T_model * vec4(tanget, 0.0)).xyz);
	
	t = normalize(t - (dot(t,n)) * n);
	
	
	vec3 biTanget = (cross(t,n));
	
	tbnMatrix = mat3(t,biTanget, n);
	
}








